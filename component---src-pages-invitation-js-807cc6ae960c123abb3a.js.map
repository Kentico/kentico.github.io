{"version":3,"sources":["webpack:///./src/components/invitation.js","webpack:///./src/pages/invitation.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["Invitation","render","invitationRequestUrl","invitationClientId","invitationScope","invitationCallbackUrl","react_default","a","createElement","className","style","background","this","props","backgroundUrl","href","organizationUrl","alt","src","organizationLogoUrl","invitationText","confirmationButtonText","Component","propTypes","organization","PropTypes","string","InvitationPage","gatsby_browser_entry","query","_ref","_ref$kenticoCloudItem","kenticoCloudItemInvitationPage","elements","invitation_title","text","confirmation_button_text","organization_logos","organization_logo","backgroundAssets","assets","_organization_logos$","organizationLogos","image","image_url","split","pop","Fragment","components_invitation","url","data","_3313670906","m","module","exports","require","default","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","Consumer","staticQueryData","children","object","isRequired","func","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape"],"mappings":"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","file":"component---src-pages-invitation-js-807cc6ae960c123abb3a.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  invitationCallbackUrl,\n  invitationClientId,\n  invitationScope\n} from '../utils/config.json';\n\nimport \"./invitation.scss\";\n\nclass Invitation extends Component {\n  render() {\n\n    const invitationRequestUrl = \n      `https://github.com/login/oauth/authorize?client_id=${invitationClientId}&scope=${invitationScope}&redirect_uri=${invitationCallbackUrl}`;\n\n    return (\n      <div\n        className=\"invitation\"\n        style={{\n          background: `url(\"${this.props.backgroundUrl}\")\n         center \n         bottom \n         no-repeat\n         rgb(28, 38, 63)`\n        }\n        }>\n        <div className=\"organization-logo\">\n          <a href={this.props.organizationUrl}>\n            <img alt=\"Organization logo\" src={this.props.organizationLogoUrl} />\n          </a>\n        </div>\n        <h1>{this.props.invitationText}</h1>\n        <a className=\"btn\" href={invitationRequestUrl}>{this.props.confirmationButtonText}</a>\n      </div >\n    );\n  }\n}\n\nInvitation.propTypes = {\n  organization: PropTypes.string,\n  invitationText: PropTypes.string,\n  confirmationButtonText: PropTypes.string,\n  organizationLogoUrl: PropTypes.string,\n  organizationUrl: PropTypes.string,\n  backgroundUrl: PropTypes.string,\n};\n\nexport default Invitation;","import React from 'react';\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport Invitation from '../components/invitation';\n\nimport './invitation.scss';\n\nconst InvitationPage = () => (\n  <StaticQuery\n    query={graphql`\n{\n  kenticoCloudItemInvitationPage(system: {codename: {eq: \"kentico_invitation_page\"}}) {\n    elements {\n      invitation_title {\n        text\n      }\n      confirmation_button_text {\n        text\n      }\n      organization_logo {\n        ... on Node {\n          ... on KenticoCloudItemImageLink {\n            elements {\n              image {\n                assets {\n                  name\n                  url\n                }\n              }\n              image_url {\n                text\n              }\n            }\n          }\n        }\n      }\n      background {\n        assets {\n          name\n          url\n        }\n      }\n    }\n  }\n}\n`}\n    render={({\n      kenticoCloudItemInvitationPage: {\n        elements: {\n          invitation_title: {\n            text: invitationText\n          },\n          confirmation_button_text: {\n            text: confirmationButtonText\n          },\n          organization_logo: organization_logos,\n          background: {\n            assets: backgroundAssets\n          }\n        }\n      }\n    }) => {\n      const {\n        elements: {\n          image: {\n            assets: organizationLogos\n          },\n          image_url: {\n            text: organizationUrl\n          }\n        }\n      } = organization_logos[0];\n\n      const organization = organizationUrl.split('/').pop();\n\n      return (\n        <>\n          <Invitation\n            organization={organization}\n            invitationText={invitationText}\n            confirmationButtonText={confirmationButtonText}\n            organizationLogoUrl={organizationLogos[0].url}\n            organizationUrl={organizationUrl}\n            backgroundUrl={backgroundAssets[0].url}\n          />\n        </>\n      );\n    }}\n  />\n);\n\nexport default InvitationPage;","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}